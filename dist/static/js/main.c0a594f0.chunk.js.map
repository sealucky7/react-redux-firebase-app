{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignOut.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reduсers/authReducer.js","store/reduсers/projectReducer.js","store/reduсers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignOut","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","name","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0a594f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a href='#' onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'})\r\n    }).catch((error) => {\r\n      dispatch({type: 'LOGIN_ERROR', error})\r\n    })\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n    })\r\n  }\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n      })\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'})\r\n    }).catch(error => {\r\n      dispatch({type: 'SIGNUP_ERROR', error})\r\n    })\r\n  }\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signout'>Signup</NavLink></li>\r\n      <li><NavLink to='/signin'>Login</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            { notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user}</span><br />\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id} >\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin' />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card depth-0\">\r\n          <div className=\"card-content\">\r\n            <div className=\"card-title\">{ project.title }</div>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action gret lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignOut extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Out</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            { authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignOut);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date(),\r\n    }).then(() => {\r\n      dispatch({\r\n        type: 'CREATE_PROJECT_SUCCESS',\r\n        project\r\n      })\r\n    }).catch((error) => {\r\n      dispatch({type: 'CREATE_PROJECT_ERROR', error});\r\n    });\r\n\r\n  }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignOut from \"./components/auth/SignOut\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signout' component={SignOut} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('Login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('Login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.error.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      /* falls through */\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.error);\r\n      /* falls through */\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n  apiKey: \"AIzaSyAlD7Z3JLcyqkQnBWZB48i8Zn46L4mtI-k\",\r\n  authDomain: \"test-marioplan-e83c8.firebaseapp.com\",\r\n  databaseURL: \"https://test-marioplan-e83c8.firebaseio.com\",\r\n  projectId: \"test-marioplan-e83c8\",\r\n  storageBucket: \"test-marioplan-e83c8.appspot.com\",\r\n  messagingSenderId: \"797317943899\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reduсers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    }),\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}